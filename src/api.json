{
	  "openapi": "3.0.3",
	  "info": {
		"version": "1.0",
		"title": "AvanChange API",
		"termsOfService": "https://avanchange.com/en/pages/terms.html",
		"contact": {
		  "name": "API Support",
		  "email": "api@avanchange.com",
		  "url": "https://avanchange.com/en/support/"
		},
		"x-logo": {
		  "url": "https://avanchange.com/uploads/images/logo-api.png",
		  "altText": "AvanChange API"
		},
		"description": "\n## Introduction\nWelcome to [AvanChange](https://avanchange.com) Exchange API and developer documentation. This page contains the documentation on how to use AvanChange through API calls. To get started, create or login into your existing [avanchange.com](https://avanchange.com) account. Go to the **My Account** &raquo; **API** section to get your **API Key** & **Secret.** \n## Endpoints and Responses\nThe Content-Type for `POST`, `PUT` requests can be set to `application/json` to the request to get the JSON response. Most API endpoints provide the same content as their HTML counterparts. Sending requests with the Accept header is necessary.\n## Authentication\nSome endpoints do not require any authentication, pretty much anything else will require you to be authenticated. To become authenticated you will need to create an `X-API-TOKEN` using your API Key and API Secret.\n\nOnce you have your API Token you can pass it as an HTTP header like this:\n```\ncurl -X GET \"https://api.avanchange.com/v1/endpoint/\" \\\n-H \"X-API-TOKEN: NbtXgMr2bowsXaFQ39XqCA==\"\n```\nand this is how POST requests will look:\n```\ncurl -X POST \"https://api.avanchange.com/v1/endpoint/\" \\\n-H \"Content-Type: application/json;\" \\\n-H \"X-API-TOKEN: NbtXgMr2bowsXaFQ39XqCA==\"\n```\n## Create API Token\nTo create your API Token you must encode your API Key with API Secret using <a href=\"https://en.wikipedia.org/wiki/Padding_(cryptography)\" target=\"_blank\">**AES-128-ECB-PKCS5Padding**</a> and encrypting result in Base64 encoding.\n\nBelow code used to calculate value for API Token. Also, you can <a href=\"https://github.com/PerfectoWeb/AvanChange-API/tree/main/php/lib\" target=\"_blank\">download as file</a>.\n```\n// PHP 5 >= 5.3.0, PHP 7, PHP 8\nfunction encrypt_apikey($api_key, $api_secret) {\n  $alg = 'AES-128-ECB';\n  $ivsize = openssl_cipher_iv_length($alg);\n  $iv = openssl_random_pseudo_bytes($ivsize);\n  $encrypted = openssl_encrypt($api_key, $alg, $api_secret, OPENSSL_RAW_DATA, $iv);\n  $encrypted = base64_encode($encrypted);\n  return $encrypted;\n}\n```\n"
	  },
	  "components": {
		"headers": {
		  "X-RateLimit-Limit": {
			"description": "Request limit per hour",
			"schema": {
			  "type": "integer"
			},
			"example": 100
		  },
		  "X-RateLimit-Remaining": {
			"description": "Remaining requests for the hour",
			"schema": {
			  "type": "integer"
			},
			"example": 100
		  }
		},
		"securitySchemes": {
		  "APITokenAuth": {
			"type": "apiKey",
			"in": "header",
			"name": "X-API-TOKEN"
		  }
		},
		"schemas": {
		  "user": {
			"type": "object",
			"properties": {
			  "login": {
				"description": "User supplied username",
				"type": "string",
				"minLength": 3,
				"example": "John78",
				"pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/"
			  },
			  "email": {
				"description": "User email address",
				"type": "string",
				"format": "email",
				"minLength": 7,
				"example": "john.doe@example.com"
			  },
			  "points": {
				"description": "Referral Programm points",
				"type": "integer",
				"minLength": 1,
				"example": 3570
			  },
			  "level": {
				"description": "Referral Programm level",
				"type": "integer",
				"minLength": 1,
				"example": 3
			  },
			  "registered": {
				"description": "User registration epoch time",
				"type": "integer",
				"minLength": 10,
				"example": 1552124074
			  },
			  "last_visit": {
				"description": "User last visit epoch time",
				"type": "integer",
				"minLength": 10,
				"example": 1558205323
			  },
			  "api_status": {
				"description": "User API status\n  * `0` - Disabled\n  * `1` - Enabled\n",
				"type": "integer",
				"example": 1,
				"enum": [
				  0,
				  1
				]
			  },
			  "status": {
				"description": "User account status\n  * `0` - Inactive\n  * `1` - Active\n  * `2` - Blocked\n",
				"type": "integer",
				"enum": [
				  0,
				  1,
				  2
				],
				"example": 1
			  }
			}
		  },
		  "balance": {
			"type": "object",
			"properties": {
			  "acbtc": {
				"description": "User Balance in BTC",
				"type": "number",
				"multipleOf": 0.000001,
				"minLength": 1,
				"example": 0.285601
			  },
			  "aceth": {
				"description": "User Balance in ETH",
				"type": "number",
				"multipleOf": 0.000001,
				"minLength": 1,
				"example": 0.285601
			  },
			  "acbtc_max": {
				"description": "The max allowed deposit on BTC balance",
				"type": "number",
				"multipleOf": 0.000001,
				"minLength": 1,
				"example": 2
			  },
			  "aceth_max": {
				"description": "The max allowed deposit on ETH balance",
				"type": "number",
				"multipleOf": 0.000001,
				"minLength": 1,
				"example": 50
			  }
			}
		  },
		  "currencies": {
			"type": "object",
			"properties": {
			  "BTC": {
				"description": "Human friendly name for BTC",
				"type": "string",
				"minLength": 3,
				"example": "Bitcoin"
			  },
			  "ETH": {
				"description": "Human friendly name for ETH",
				"type": "string",
				"minLength": 3,
				"example": "Ethereum"
			  },
			  "XMR": {
				"description": "Human friendly name for XMR",
				"type": "string",
				"minLength": 3,
				"example": "Monero (XMR)"
			  },
			  "TUSD": {
				"description": "Human friendly name for TUSD",
				"type": "string",
				"minLength": 3,
				"example": "TrueUSD (TUSD)"
			  },
			  "QWRUB": {
				"description": "Human friendly name for QWRUB",
				"type": "string",
				"minLength": 3,
				"example": "Qiwi (RUB)"
			  },
			  "...": {
				"description": "Human friendly name for other currencies",
				"type": "string",
				"minLength": 3,
				"example": "..."
			  }
			}
		  },
		  "rate": {
			"type": "object",
			"properties": {
			  "from": {
				"description": "«From» currency code. All currency codes you can get through [/exchange/currencies/](#operation/exchange-currencies) method",
				"type": "string",
				"minLength": 3,
				"example": "BTC"
			  },
			  "from_name": {
				"description": "Human friendly name of «From» direction",
				"type": "string",
				"minLength": 3,
				"example": "Bitcoin"
			  },
			  "to": {
				"description": "«To» currency code. All currency codes you can get through [/exchange/currencies/](#operation/exchange-currencies) method.",
				"type": "string",
				"minLength": 3,
				"example": "ETH"
			  },
			  "to_name": {
				"description": "Human friendly name of «To» direction",
				"type": "string",
				"minLength": 3,
				"example": "Ethereum"
			  },
			  "rate": {
				"description": "Exchange rate without discounts. If you want get rate with all personal discounts please use `X-API-TOKEN` header in your query.",
				"type": "number",
				"minLength": 3,
				"multipleOf": 0.000001,
				"example": 1709159.47
			  },
			  "reserve": {
				"description": "Reserves of «To» currency",
				"type": "number",
				"minLength": 3,
				"multipleOf": 0.000001,
				"example": 500000
			  },
			  "min": {
				"description": "Min amount in give currency",
				"type": "number",
				"minLength": 3,
				"multipleOf": 0.000001,
				"example": 5000
			  },
			  "max": {
				"description": "Max amount in give currency",
				"type": "number",
				"minLength": 3,
				"multipleOf": 0.000001,
				"example": 45000
			  }
			}
		  },
		  "rates": {
			"type": "object",
			"properties": {
			  "1": {
				"$ref": "#/components/schemas/rate"
			  },
			  "2": {
				"$ref": "#/components/schemas/rate"
			  },
			  "n": {
				"description": "Same other exchange rates",
				"type": "object",
				"example": "..."
			  }
			}
		  },
		  "order-created": {
			"type": "object",
			"properties": {
			  "hash": {
				"description": "Unique payment hash. Save this hash after request to confirm, cancel or check your payment status.",
				"type": "string",
				"minLength": 32,
				"example": "d88b1e8f0e32b9a8bfe1e698b074dab62397b8f9",
				"pattern": "/(?=.*[a-zA-Z0-9])/"
			  },
			  "status": {
				"description": "Exchange order status\n  * `CREATED` - Order created. Awaiting payment to change status to *PAID*.\n  * `PAID` - Our system receive payment information form processing.\n  * `PAID_MANUALLY` - When payment sent manually (without processing)\n  * `COMPLETE` - Order succesfull complete.\n  * `DENIED` - Exchange for this order is denied by moderator\n  * `CANCELED` - Order canceled by user\n  * `EXPIRED` - Order lifetime is expired\n  * `REMOVED` - Order is removed by moderator\n",
				"type": "string",
				"enum": [
				  "CREATED",
				  "PAID",
				  "COMPLETE",
				  "DENIED",
				  "CANCELED",
				  "EXPIRED",
				  "REMOVED"
				],
				"example": "CREATED",
				"minLength": 3,
				"pattern": "/(?=.*[a-zA-Z0-9])/"
			  }
			}
		  },
		  "error-access": {
			"type": "object",
			"properties": {
			  "error": {
				"description": "When you'r get an array \"error = 1\" in any request, it means that the server returned an error.\n   * `0` - Success\n   * `1` - Error\n",
				"type": "integer",
				"enum": [
				  0,
				  1
				],
				"example": 1
			  },
			  "code": {
				"description": "There are three different error types.\n  - 3XXX - Аuthentication & security errors\n  - 4XXX - Data errors\n  - 5XXX - System errors",
				"type": "integer",
				"minLength": 4,
				"example": 3001
			  },
			  "description": {
				"description": "Human friendly description of error",
				"type": "string",
				"minLength": 3,
				"example": "API Token not set"
			  },
			  "advice": {
				"description": "Possible solution to your problem",
				"type": "string",
				"minLength": 3,
				"example": "Submit your encrypted API Key through X-API-TOKEN header"
			  }
			}
		  },
		  "error-data": {
			"type": "object",
			"properties": {
			  "error": {
				"description": "When you'r get an array \"error = 1\" in any request, it means that the server returned an error.\n   * `0` - Success\n   * `1` - Error\n",
				"type": "integer",
				"enum": [
				  0,
				  1
				],
				"example": 1
			  },
			  "code": {
				"description": "There are three different error types.\n  - 3XXX - Аuthentication & security errors\n  - 4XXX - Data errors\n  - 5XXX - System errors",
				"type": "integer",
				"minLength": 4,
				"example": 4001
			  },
			  "description": {
				"description": "Human friendly description of error",
				"type": "string",
				"minLength": 3,
				"example": "Encrypted data format is invalid"
			  },
			  "advice": {
				"description": "Possible solution to your problem",
				"type": "string",
				"minLength": 3,
				"example": "Please check specified algorithm used for encryption"
			  }
			}
		  },
		  "error-codes": {
			"type": "object",
			"properties": {
			  "3000": {
				"description": "Secret key does not exist",
				"type": "string"
			  },
			  "3001": {
				"description": "Merchant account does not exist",
				"type": "string"
			  },
			  "3002": {
				"description": "Encrypted data format is invalid",
				"type": "string"
			  }
			}
		  }
		}
	  },
	  "servers": [
		{
		  "url": "https://api.avanchange.com/v1"
		},
		{
		  "url": "https://avanchange.com/api/v1"
		}
	  ],
	  "paths": {
		"/exchange/currencies": {
		  "summary": "Currencies",
		  "description": "Get all payment methods codes with human friendly names",
		  "get": {
			"summary": "Currency codes",
			"description": "Get all available currency codes with human friendly names",
			"operationId": "exchange-currencies",
			"responses": {
			  "200": {
				"description": "Success",
				"content": {
				  "application/json": {
					"schema": {
					  "$ref": "#/components/schemas/currencies"
					}
				  }
				}
			  }
			},
			"tags": [
			  "Exchange"
			]
		  }
		},
		"/exchange/rates": {
		  "summary": "Rates",
		  "description": "Actions with exchange rates and etc",
		  "get": {
			"summary": "Rates",
			"description": "Get all exchange directions rates",
			"operationId": "exchange-rates",
			"responses": {
			  "200": {
				"description": "Success",
				"content": {
				  "application/json": {
					"schema": {
					  "$ref": "#/components/schemas/rates"
					}
				  }
				}
			  }
			},
			"tags": [
			  "Exchange"
			]
		  }
		},
		"/exchange/rate/{symbol}": {
		  "summary": "Rate",
		  "description": "Get rate for selected direction",
		  "get": {
			"summary": "Single Rate",
			"description": "Get rate for selected direction",
			"operationId": "exchange-rate",
			"parameters": [
			  {
				"name": "symbol",
				"in": "path",
				"required": true,
				"example": "BTC-ETH",
				"description": "Exchange direction with currency codes, separated by a dash. Get a list of active currency codes through [/exchange/currencies/](#operation/exchange-currencies) method.",
				"schema": {
				  "type": "string",
				  "pattern": "^[A-Z]{3,8}-[A-Z]{3,8}$",
				  "minLength": 7
				}
			  }
			],
			"responses": {
			  "200": {
				"description": "Success",
				"content": {
				  "application/json": {
					"schema": {
					  "$ref": "#/components/schemas/rate"
					}
				  }
				}
			  }
			},
			"tags": [
			  "Exchange"
			]
		  }
		},
		"/account/info": {
		  "summary": "Account info",
		  "description": "Get account info",
		  "get": {
			"security": [
			  {
				"APITokenAuth": []
			  }
			],
			"summary": "Get account info",
			"description": "Retrieve a short data of personal account.",
			"operationId": "account-info",
			"responses": {
			  "200": {
				"description": "Success",
				"content": {
				  "application/json": {
					"schema": {
					  "$ref": "#/components/schemas/user"
					}
				  }
				}
			  }
			},
			"tags": [
			  "Account"
			]
		  }
		},
		"/account/balance": {
		  "summary": "Account balance",
		  "description": "Get account balances",
		  "get": {
			"security": [
			  {
				"APITokenAuth": []
			  }
			],
			"summary": "Get account balance",
			"description": "Retrieve personal account balances",
			"operationId": "account-balance",
			"responses": {
			  "200": {
				"description": "Success",
				"content": {
				  "application/json": {
					"schema": {
					  "$ref": "#/components/schemas/balance"
					}
				  }
				}
			  }
			},
			"tags": [
			  "Account"
			]
		  }
		},
		"/order/create": {
		  "summary": "Create xxx",
		  "description": "Create YYY",
		  "post": {
			"security": [
			  {
				"APITokenAuth": []
			  }
			],
			"summary": "Create exchange order",
			"description": "Creates an exchange order with reference number and registers payment information (description, timestamp) with the integrator",
			"operationId": "order-create",
			"responses": {
			  "200": {
				"description": "Success",
				"content": {
				  "application/json": {
					"schema": {
					  "$ref": "#/components/schemas/order-created"
					}
				  }
				}
			  },
			  "400": {
				"description": "Data error",
				"content": {
				  "application/json": {
					"schema": {
					  "$ref": "#/components/schemas/error-data"
					}
				  }
				}
			  },
			  "401": {
				"description": "Access denied",
				"content": {
				  "application/json": {
					"schema": {
					  "$ref": "#/components/schemas/error-access"
					}
				  }
				}
			  }
			},
			"tags": [
			  "Orders"
			]
		  }
		}
	  },
	  "tags": [
		{
		  "name": "Account",
		  "description": "Operations with personal account. Get user info, balance and others."
		},
		{
		  "name": "Exchange",
		  "description": "Operations with rates and sugessions. Get currencies, rates or single rate."
		},
		{
		  "name": "Orders",
		  "description": "Operations with orders. Create, confirm, cancel and check orders."
		}
	  ]
	}